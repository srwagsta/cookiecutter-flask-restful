# WARNING: this file is not suitable for production, please use with caution
version: '3.7'

services:
 
  cookiecutter-api:
    image: ${DOCKER_REGISTRY}crits_and_coffee_api:${AUTH_API_LOCAL_TAG}
    container_name: {{cookiecutter.app_name}}-local
    build: 
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - postgres
    networks:
      - back-end
    env_file:
      - ./.flask_cookiecutter
      - ./.postgres
    enviorment:
      {% if cookiecutter.use_celery == "yes"%}
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq
      - CELERY_RESULT_BACKEND_URL=redis://redis
      {% endif %}
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: dnsrr
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 120s
    command: /start

  postgres:
    image: ${DOCKER_REGISTRY}crits_and_coffee_postgres:${DOCKER_LOCAL_TAG}
    container_name: postgres-local
    build:
      context: ./local/postgres
      dockerfile: ./Dockerfile
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: dnsrr
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 120s
    networks:
      - back-end
    volumes:
      - local-postgres-data:/var/lib/postgresql/data
      - local-postgres-data-backups:/backups
    env_file:
      - ../.envs/.local/.postgres

  {% if cookiecutter.use_celery == "yes" %}
  rabbitmq:
    image: rabbitmq
  
  redis:
    image: redis
  
  celery:
    image: {{cookiecutter.app_name}}
    command: "celery worker -A {{cookiecutter.app_name}}.celery_app:app"
    env_file:
      - ./.flaskenv
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq
      - CELERY_RESULT_BACKEND_URL=redis://redis
  {% endif %}

networks:
  back-end:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "true"

volumes:
  local-postgres-data: {}
  local-postgres-data-backups: {}